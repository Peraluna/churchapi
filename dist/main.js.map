{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"mongoose\"","webpack:///external \"express\"","webpack:///./src/middleware/check-auth.js","webpack:///external \"jsonwebtoken\"","webpack:///./src/models/product.js","webpack:///./src/index.js","webpack:///external \"http\"","webpack:///./src/app.js","webpack:///external \"morgan\"","webpack:///external \"body-parser\"","webpack:///./src/routes/products.js","webpack:///external \"multer\"","webpack:///./src/controllers/products.js","webpack:///./src/routes/orders.js","webpack:///./src/controllers/orders.js","webpack:///./src/models/order.js","webpack:///./src/routes/user.js","webpack:///./src/controllers/user.js","webpack:///external \"bcrypt\"","webpack:///./src/models/user.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","jwt","req","res","next","token","headers","authorization","split","decoded","verify","process","env","JWT_KEY","userData","error","status","json","message","mongoose","productSchema","Schema","_id","Types","ObjectId","type","String","required","price","Number","productImage","model","http","app","port","PORT","createServer","listen","console","log","express","morgan","bodyParser","productRoutes","orderRoutes","userRoutes","connect","useMongoClient","db","connection","on","once","databaseName","Promise","global","use","static","urlencoded","extended","header","method","Error","router","Router","multer","checkAuth","ProductsController","upload","storage","diskStorage","destination","file","cb","filename","Date","toISOString","replace","originalname","limits","fileSize","fileFilter","mimetype","products_get_all","post","single","products_create_product","products_get_product","patch","products_update_product","delete","products_delete","Product","find","select","exec","then","docs","response","count","length","products","map","doc","request","url","catch","err","body","path","save","result","createdProduct","id","params","productId","findById","product","updateOps","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","done","ops","propName","return","update","$set","remove","OrdersController","orders_get_all","orders_create_order","orders_get_order","orders_delete_order","Order","populate","orders","quantity","createdOrder","orderId","order","orderSchema","ref","default","UserController","user_signup","user_login","user_delete","bcrypt","User","email","user","hash","password","compare","sign","userId","expiresIn","userSchema","unique","match"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = require(\"mongoose\");","module.exports = require(\"express\");","const jwt = require('jsonwebtoken');\n\nmodule.exports = (req, res, next) => {\n    try {\n        const token = req.headers.authorization.split(\" \")[1];\n        const decoded = jwt.verify(token, process.env.JWT_KEY);\n        req.userData = decoded;\n        next();\n    } catch (error) {\n        return res.status(401).json({\n            message: 'Auth failed for token : '+token\n        });\n    }\n};","module.exports = require(\"jsonwebtoken\");","const mongoose = require('mongoose');\n\nconst productSchema = mongoose.Schema({\n    _id: mongoose.Schema.Types.ObjectId,\n    name: { type: String, required: true },\n    price: { type: Number, required: true },\n    productImage: { type: String, required: true }\n});\n\nmodule.exports = mongoose.model('Product', productSchema);","const http = require('http');\nconst app = require('./app.js');\n\nconst ip_addr = 'localhost'\nconst port = process.env.PORT || 3000;\nconst server = http.createServer(app);\n\nserver.listen(port , ip_addr);\nconsole.log('Server started on %s:%s : ',ip_addr , port );\n","module.exports = require(\"http\");","const express = require(\"express\");\nconst app = express();\nconst morgan = require(\"morgan\");\nconst bodyParser = require(\"body-parser\");\nconst mongoose = require(\"mongoose\");\n\nconst productRoutes = require(\"./routes/products\");\nconst orderRoutes = require(\"./routes/orders\");\nconst userRoutes = require('./routes/user');\n\n\n/* // connect to mongodbatlas on cloud server\nmongoose.connect( \n  \"mongodb://node-shop:\" +\n    process.env.MONGO_ATLAS_PW +\n    \"@node-rest-shop-shard-00-00-wovcj.mongodb.net:27017,node-rest-shop-shard-00-01-wovcj.mongodb.net:27017,node-rest-shop-shard-00-02-wovcj.mongodb.net:27017/test?ssl=true&replicaSet=node-rest-shop-shard-0&authSource=admin\",\n  {\n    useMongoClient: true\n  }\n); */\n\nmongoose.connect('mongodb://localhost/shop', {\n  useMongoClient: true\n});\n \nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function() {\n  // we're connected!\n  console.log(\"Connected to mongoDB...\"+ db.db.databaseName)\n});\n\nmongoose.Promise = global.Promise;\n\napp.use(morgan(\"dev\"));\napp.use('/uploads', express.static('uploads'));\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\napp.use((req, res, next) => {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\n    \"Access-Control-Allow-Headers\",\n    \"Origin, X-Requested-With, Content-Type, Accept, Authorization\"\n  );\n  if (req.method === \"OPTIONS\") {\n    res.header(\"Access-Control-Allow-Methods\", \"PUT, POST, PATCH, DELETE, GET\");\n    return res.status(200).json({});\n  }\n  next();\n});\n\n// Routes which should handle requests\napp.use(\"/products\", productRoutes);\napp.use(\"/orders\", orderRoutes);\napp.use(\"/user\", userRoutes);\n\napp.use((req, res, next) => {\n  const error = new Error(\"api Not found...\");\n  error.status = 404;\n  next(error);\n});\n\napp.use((error, req, res, next) => {\n  res.status(error.status || 500);\n  res.json({\n    error: {\n      message: error.message\n    }\n  });\n});\n\nmodule.exports = app;\n","module.exports = require(\"morgan\");","module.exports = require(\"body-parser\");","const express = require(\"express\");\nconst router = express.Router();\nconst multer = require('multer');\nconst checkAuth = require('../middleware/check-auth');\nconst ProductsController = require('../controllers/products');\n\nconst storage = multer.diskStorage({\n  destination: function(req, file, cb) {\n    // console.log(file);\n    cb(null, './uploads/');\n  },\n  filename: function(req, file, cb) {\n    // use this on Windows dir\n    cb(null, new Date().toISOString().replace(/:/g, '-') + file.originalname);\n    // otherwise use this\n    //cb(null, new Date().toISOString() + file.originalname);\n    //console.log(file.path);\n  }\n});\n\nconst fileFilter = (req, file, cb) => {\n  // reject a file\n\n  if (file.mimetype === 'image/jpeg' || file.mimetype === 'image/png') {\n    cb(null, true);\n  } else {\n    cb(null, false);\n  }\n};\n\nconst upload = multer({\n  storage: storage,\n  limits: {\n    fileSize: 1024 * 1024 * 5\n  },\n  fileFilter: fileFilter\n});\n\nrouter.get(\"/\", ProductsController.products_get_all);\n\nrouter.post(\"/\", checkAuth, upload.single('productImage'), ProductsController.products_create_product);\n\nrouter.get(\"/:productId\", ProductsController.products_get_product);\n\nrouter.patch(\"/:productId\", checkAuth, ProductsController.products_update_product);\n\nrouter.delete(\"/:productId\", checkAuth, ProductsController.products_delete);\n\nmodule.exports = router;\n","module.exports = require(\"multer\");","const mongoose = require(\"mongoose\");\nconst Product = require(\"../models/product\");\n\nexports.products_get_all = (req, res, next) => {\n  Product.find()\n    .select(\"name price _id productImage\")\n    .exec()\n    .then(docs => {\n      const response = {\n        count: docs.length,\n        products: docs.map(doc => {\n          return {\n            name: doc.name,\n            price: doc.price,\n            productImage: doc.productImage,\n            _id: doc._id,\n            request: {\n              type: \"GET\",\n              url: \"http://localhost:5000/products/\" + doc._id\n            }\n          };\n        })\n      };\n      //   if (docs.length >= 0) {\n      res.status(200).json(response);\n      //   } else {\n      //       res.status(404).json({\n      //           message: 'No entries found'\n      //       });\n      //   }\n    })\n    .catch(err => {\n      console.log(err);\n      res.status(500).json({\n        error: err\n      });\n    });\n};\n\nexports.products_create_product = (req, res, next) => {\n  const product = new Product({\n    _id: new mongoose.Types.ObjectId(),\n    name: req.body.name,\n    price: req.body.price,\n    productImage: req.file.path\n  });\n  product\n    .save()\n    .then(result => {\n      console.log(result);\n      res.status(201).json({\n        message: \"Created product successfully\",\n        createdProduct: {\n          name: result.name,\n          price: result.price,\n          _id: result._id,\n          request: {\n            type: \"GET\",\n            url: \"http://localhost:5000/products/\" + result._id\n          }\n        }\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      res.status(500).json({\n        error: err\n      });\n    });\n};\n\nexports.products_get_product = (req, res, next) => {\n  const id = req.params.productId;\n  Product.findById(id)\n    .select(\"name price _id productImage\")\n    .exec()\n    .then(doc => {\n      console.log(\"From database\", doc);\n      if (doc) {\n        res.status(200).json({\n          product: doc,\n          request: {\n            type: \"GET\",\n            url: \"http://localhost:5000/products\"\n          }\n        });\n      } else {\n        res\n          .status(404)\n          .json({ message: \"No valid entry found for provided ID\" });\n      }\n    })\n    .catch(err => {\n      console.log(err);\n      res.status(500).json({ error: err });\n    });\n};\n\nexports.products_update_product = (req, res, next) => {\n  const id = req.params.productId;\n  const updateOps = {};\n  for (const ops of req.body) {\n    updateOps[ops.propName] = ops.value;\n  }\n  Product.update({ _id: id }, { $set: updateOps })\n    .exec()\n    .then(result => {\n      res.status(200).json({\n        message: \"Product updated\",\n        request: {\n          type: \"GET\",\n          url: \"http://localhost:5000/products/\" + id\n        }\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      res.status(500).json({\n        error: err\n      });\n    });\n};\n\nexports.products_delete = (req, res, next) => {\n  const id = req.params.productId;\n  Product.remove({ _id: id })\n    .exec()\n    .then(result => {\n      res.status(200).json({\n        message: \"Product deleted\",\n        request: {\n          type: \"POST\",\n          url: \"http://localhost:5000/products\",\n          body: { name: \"String\", price: \"Number\" }\n        }\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      res.status(500).json({\n        error: err\n      });\n    });\n};\n","const express = require(\"express\");\nconst router = express.Router();\nconst checkAuth = require('../middleware/check-auth');\n\nconst OrdersController = require('../controllers/orders');\n\n// Handle incoming GET requests to /orders\n\n// POSTMAN TEST :\n/* http://localhost:5000/orders\n   type     : GET\n   HEADER   : Key : Authorization , value : Bearer webtokensentwhenlogin\n\n\n*/\n\nrouter.get(\"/\", checkAuth, OrdersController.orders_get_all);\n\nrouter.post(\"/\", checkAuth, OrdersController.orders_create_order);\n\nrouter.get(\"/:orderId\", checkAuth, OrdersController.orders_get_order);\n\nrouter.delete(\"/:orderId\", checkAuth, OrdersController.orders_delete_order);\n\nmodule.exports = router;\n","const mongoose = require(\"mongoose\");\n\nconst Order = require(\"../models/order\");\nconst Product = require(\"../models/product\");\n\nexports.orders_get_all = (req, res, next) => {\n  Order.find()\n    .select(\"product quantity _id\")\n    .populate(\"product\", \"name\")\n    .exec()\n    .then(docs => {\n      res.status(200).json({\n        count: docs.length,\n        orders: docs.map(doc => {\n          return {\n            _id: doc._id,\n            product: doc.product,\n            quantity: doc.quantity,\n            request: {\n              type: \"GET\",\n              url: \"http://localhost:5000/orders/\" + doc._id\n            }\n          };\n        })\n      });\n    })\n    .catch(err => {\n      res.status(500).json({\n        error: err\n      });\n    });\n};\n\nexports.orders_create_order = (req, res, next) => {\n  Product.findById(req.body.productId)\n    .then(product => {\n      if (!product) {\n        return res.status(404).json({\n          message: \"Product not found\"\n        });\n      }\n      const order = new Order({\n        _id: mongoose.Types.ObjectId(),\n        quantity: req.body.quantity,\n        product: req.body.productId\n      });\n      return order.save();\n    })\n    .then(result => {\n      console.log(result);\n      res.status(201).json({\n        message: \"Order stored\",\n        createdOrder: {\n          _id: result._id,\n          product: result.product,\n          quantity: result.quantity\n        },\n        request: {\n          type: \"GET\",\n          url: \"http://localhost:3000/orders/\" + result._id\n        }\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      res.status(500).json({\n        error: err\n      });\n    });\n};\n\nexports.orders_get_order = (req, res, next) => {\n  Order.findById(req.params.orderId)\n    .populate(\"product\")\n    .exec()\n    .then(order => {\n      if (!order) {\n        return res.status(404).json({\n          message: \"Order not found\"\n        });\n      }\n      res.status(200).json({\n        order: order,\n        request: {\n          type: \"GET\",\n          url: \"http://localhost:3000/orders\"\n        }\n      });\n    })\n    .catch(err => {\n      res.status(500).json({\n        error: err\n      });\n    });\n};\n\nexports.orders_delete_order = (req, res, next) => {\n  Order.remove({ _id: req.params.orderId })\n    .exec()\n    .then(result => {\n      res.status(200).json({\n        message: \"Order deleted\",\n        request: {\n          type: \"POST\",\n          url: \"http://localhost:3000/orders\",\n          body: { productId: \"ID\", quantity: \"Number\" }\n        }\n      });\n    })\n    .catch(err => {\n      res.status(500).json({\n        error: err\n      });\n    });\n};\n","const mongoose = require('mongoose');\n\nconst orderSchema = mongoose.Schema({\n    _id: mongoose.Schema.Types.ObjectId,\n    product: { type: mongoose.Schema.Types.ObjectId, ref: 'Product', required: true },\n    quantity: { type: Number, default: 1 }\n});\n\nmodule.exports = mongoose.model('Order', orderSchema);","const express = require(\"express\");\nconst router = express.Router();\n\nconst UserController = require('../controllers/user');\nconst checkAuth = require('../middleware/check-auth');\n\n// TO TEST POST USE POSTMAN\n// http://localhost:5000/user/signup\nrouter.post(\"/signup\", UserController.user_signup);\n\n// http://localhost:5000/user/login\nrouter.post(\"/login\", UserController.user_login);\n\n// http://localhost:5000/user/{id}\nrouter.delete(\"/:userId\", checkAuth, UserController.user_delete);\n\nmodule.exports = router;\n","const mongoose = require(\"mongoose\");\nconst bcrypt = require(\"bcrypt\");\nconst jwt = require(\"jsonwebtoken\");\n\nconst User = require(\"../models/user\");\n\nexports.user_signup = (req, res, next) => {\n  console.log(\"signing up...\");\n  User.find({ email: req.body.email })\n    .exec()\n    .then(user => {\n      if (user.length >= 1) {\n        return res.status(409).json({\n          message: \"Mail exists\"\n        });\n      } else {\n        bcrypt.hash(req.body.password, 10, (err, hash) => {\n          if (err) {\n            return res.status(500).json({\n              error: err\n            });\n          } else {\n            const user = new User({\n              _id: new mongoose.Types.ObjectId(),\n              email: req.body.email,\n              password: hash\n            });\n            user\n              .save()\n              .then(result => {\n                console.log(result);\n                res.status(201).json({\n                  message: \"User created\"\n                });\n              })\n              .catch(err => {\n                console.log(err);\n                res.status(500).json({\n                  error: err\n                });\n              });\n          }\n        });\n      }\n    });\n};\n\nexports.user_login = (req, res, next) => {\n  User.find({ email: req.body.email })\n    .exec()\n    .then(user => {\n      if (user.length < 1) {\n        return res.status(401).json({\n          message: \"Auth failed\"\n        });\n      }\n      bcrypt.compare(req.body.password, user[0].password, (err, result) => {\n        if (err) {\n          return res.status(401).json({\n            message: \"Auth failed\"\n          });\n        }\n        if (result) {\n          const token = jwt.sign(\n            {\n              email: user[0].email,\n              userId: user[0]._id\n            },\n            process.env.JWT_KEY,\n            {\n              expiresIn: \"1h\"\n            }\n          );\n          return res.status(200).json({\n            message: \"Auth successful\",\n            token: token\n          });\n        }\n        res.status(401).json({\n          message: \"Auth failed\"\n        });\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      res.status(500).json({\n        error: err\n      });\n    });\n};\n\nexports.user_delete = (req, res, next) => {\n  User.remove({ _id: req.params.userId })\n    .exec()\n    .then(result => {\n      res.status(200).json({\n        message: \"User deleted\"\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      res.status(500).json({\n        error: err\n      });\n    });\n};\n","module.exports = require(\"bcrypt\");","const mongoose = require('mongoose');\n\nconst userSchema = mongoose.Schema({\n    _id: mongoose.Schema.Types.ObjectId,\n    email: { \n        type: String, \n        required: true, \n        unique: true, \n        match: /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\n    },\n    password: { type: String, required: true }\n});\n\nmodule.exports = mongoose.model('User', userSchema);"],"sourceRoot":""}